# Reading C:/altera/13.0sp1/modelsim_ase/tcl/vsim/pref.tcl 
# do ec2_top_run_msim_rtl_verilog.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vlog -vlog01compat -work work +incdir+C:/part_2/db {C:/part_2/db/counter_8.v}
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module counter_8
# 
# Top level modules:
# 	counter_8
# 
vsim +altera -do ec2_top_run_msim_rtl_verilog.do -l msim_transcript -gui work.counter_8
# vsim +altera -do ec2_top_run_msim_rtl_verilog.do -l msim_transcript -gui work.counter_8 
# Loading work.counter_8
# do ec2_top_run_msim_rtl_verilog.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/part_2/db {C:/part_2/db/counter_8.v}
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module counter_8
# 
# Top level modules:
# 	counter_8
# 
add wave clock enable
add wave -hexadecimal
# Missing signal name or pattern.
add wave -hexadecimal count
force enable 1
run 100ns
force clock 0 0, 1 10ns -repeat 20ns
force enable 1
run 100ns
force enable 0
run 100ns
force enable 1
run 100ns
force enable 0
restart
# WARNING: No extended dataflow license exists
restart
# Loading work.counter_8
do ./tb_counter.do
# ** Error: wrong # args: should be "foreach varList list ?varList list ...? command"
# Error in macro ././tb_counter.do line 4
# wrong # args: should be "foreach varList list ?varList list ...? command"
#     while executing
# "foreach enable 1"
#     ("uplevel" body line 1)
#     invoked from within
# "uplevel 1 [lreplace $args 0 0 [lindex $cmds 0]]"
#     (procedure "::unknown" line 157)
#     invoked from within
# "fore enable 1"
do ./tb_counter.do
do ./tb_counter.do
restart
do ./tb_counter.do
step
step
step -over
step -over
step -over
# Next activity is in 10 ns.
# 
# Next activity is in 10 ns.
step -over
step -over
step -over
step -over
# Next activity is in 10 ns.
# 
# Next activity is in 10 ns.
